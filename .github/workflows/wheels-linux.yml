name: Build Linux wheels

on:
  workflow_call:
    inputs:
      build-commit:
        required: true
        type: string
      artifacts-name:
        required: true
        type: string

env:
  REPO_DIR: nipy

jobs:
  build:
    name: ${{ matrix.python }} ${{ matrix.mb-ml-libc }}${{ matrix.mb-ml-ver }}
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python: [
          "3.8",
          "3.9",
          "3.10",
          "3.11",
          "3.12",
          "3.13",
        ]
        mb-ml-libc: [ "manylinux" ]
        mb-ml-ver: [ 2014, "_2_28" ]
        include:
          - python: "3.9"
            mb-ml-libc: "musllinux"
            mb-ml-ver: "_1_1"
          - python: "3.10"
            mb-ml-libc: "musllinux"
            mb-ml-ver: "_1_1"
          - python: "3.11"
            mb-ml-libc: "musllinux"
            mb-ml-ver: "_1_1"
          - python: "3.12"
            mb-ml-libc: "musllinux"
            mb-ml-ver: "_1_1"
          - python: "3.13"
            mb-ml-libc: "musllinux"
            mb-ml-ver: "_1_1"
    env:
      BUILD_COMMIT: ${{ inputs.build-commit }}
      MB_PYTHON_VERSION: ${{ matrix.python }}
      MB_ML_LIBC: ${{ matrix.mb-ml-libc }}
      MB_ML_VER: ${{ matrix.mb-ml-ver }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Build Wheel
        run: .github/workflows/build.sh
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifacts-name }}-${{ matrix.runs-on }}-${{ matrix.platform }}-${{ matrix.python }}
          path: wheelhouse/*.whl
      # Uncomment to get SSH access for testing
      # - name: Setup tmate session
      #   if: failure()
      #   uses: mxschmitt/action-tmate@v3
